{"uid":"21af0766979e835","name":"testGetUser","fullName":"com.api.tests.ApiTest.testGetUser","historyId":"a1a695c42dd99ecd6fd89595ea0020a5","time":{"start":1749782453261,"stop":1749782455319,"duration":2058},"status":"failed","statusMessage":"expected [{status=success, data={id=1, name=John Doe}}] but found [\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <link rel=\"stylesheet\" href=\"/style.css\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/prism-themes/1.9.0/prism-lucario.min.css\"\n    />\n    <title>JSONPlaceholder - Free Fake REST API</title>\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <script\n      async\n      src=\"https://www.googletagmanager.com/gtag/js?id=G-E3C3GCQVBN\"\n    ></script>\n    <script>\n      window.dataLayer = window.dataLayer || []\n      function gtag() {\n        dataLayer.push(arguments)\n      }\n      gtag('js', new Date())\n\n      gtag('config', 'G-E3C3GCQVBN')\n    </script>\n    <script\n      async\n      src=\"https://media.ethicalads.io/media/client/ethicalads.min.js\"\n    ></script>\n  </head>\n\n  <body>\n    <!-- Banner -->\n    <div class=\"bg-blue-500 text-center py-2\">\n      <div class=\"container mx-auto\">\n        <a href=\"https://github.com/typicode/mistcss\" class=\"text-white\">Check my new project <strong>\uD83D\uDCA7 MistCSS</strong> write React components with 50% less code</a>\n      </div>\n    </div>\n    <header\n      class=\"\n        container\n        mx-auto\n        max-w-4xl\n        flex flex-col\n        md:flex-row\n        justify-between\n        py-one\n        mb-three\n      \"\n    >\n      <h1>\n        <a href=\"/\" class=\"font-bold no-underline\">JSONPlaceholder</a>\n      </h1>\n      <nav>\n        <ul class=\"flex\">\n          <li><a href=\"/guide\" class=\"mr-4 no-underline\">Guide</a></li>\n          <li>\n            <a\n              href=\"https://github.com/sponsors/typicode\"\n              class=\"mr-4 no-underline\"\n              >Sponsor this project</a\n            >\n          </li>\n          <li>\n            <a href=\"https://blog.typicode.com\" class=\"mr-4 no-underline\"\n              >Blog</a\n            >\n          </li>\n          <li>\n            <a href=\"https://my-json-server.typicode.com\" class=\"no-underline\"\n              >My JSON Server</a\n            >\n          </li>\n        </ul>\n      </nav>\n    </header>\n\n    <div>\n<!-- Hero -->\n<section id=\"hero\" class=\"-mt-three py-20 mb-six -mx-2\">\n  <div class=\"container mx-auto max-w-4xl\">\n    <span class=\"text-6xl bold\">{JSON} Placeholder</span>\n    <h1 class=\"mt-two text-lg\">\n      Free fake and reliable API for testing and prototyping.\n    </h1>\n    <p class=\"mb-one text-lg\">\n      Powered by\n      <a href=\"https://github.com/typicode/json-server\">JSON Server</a>\n      +\n      <a href=\"https://github.com/typicode/lowdb\">LowDB</a>.\n    </p>\n    <p><b>Serving ~3 billion requests each month</b>.</p>\n  </div>\n</section>\n\n<!-- Sponsors -->\n<section class=\"container mx-auto max-w-4xl mb-six\">\n  <h2 class=\"text-2xl mb-one\">Sponsors</h2>\n  <p class=\"mb-two\">\n    JSONPlaceholder is supported by the following companies and\n    <a href=\"https://github.com/sponsors/typicode\">Sponsors</a> on GitHub, check\n    them out \uD83D\uDC96\n  </p>\n\n  <p>\n    <a href=\"https://mockend.com\" target=\"_blank\">\n      <img src=\"mockend.svg\" class=\"mb-two\" style=\"height: 100px\"  />\n    </a>\n  </p>\n\n  <p>\n    <a href=\"https://zuplo.link/json-server-web\" target=\"_blank\">\n      <img src=\"https://github.com/user-attachments/assets/adfee31f-a8b6-4684-9a9b-af4f03ac5b75\" class=\"mb-two\" style=\"height: 100px\" />\n    </a>\n  </p>\n\n  <p class=\"my-two\">\n    <a href=\"https://github.com/sponsors/typicode\">Your company logo here</a>\n  </p>\n</section>\n\n<!-- Example -->\n<section class=\"container mx-auto max-w-4xl mb-four\">\n  <h2 class=\"text-2xl mb-one\">Try it</h2>\n  <p>Run this code here, in a console or from any site:</p>\n\n  <pre><code id=\"example\" class=\"language-javascript\">fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(response => response.json())\n      .then(json => console.log(json))</code></pre>\n\n  <button\n    id=\"run-button\"\n    class=\"\n      bg-black\n      hover:bg-gray-700\n      text-white\n      font-bold\n      py-quarter\n      my-quarter\n      px-4\n      rounded\n    \"\n  >\n    Run script\n  </button>\n\n  <pre><code id=\"result\" class=\"language-javascript\">{}</code></pre>\n  <p id=\"run-message\" class=\"invisible\">\n    Congrats! You've made your first call to JSONPlaceholder. \uD83D\uDE03 \uD83C\uDF89\n  </p>\n  <div\n    class=\"horizontal flat adaptive\"\n    data-ea-publisher=\"jsonplaceholdertypicodecom\"\n    data-ea-style=\"stickybox\"\n    data-ea-keywords=\"javascript|typescript|mobile|react|vue|frontend|front-end|backend|back-end\"\n  ></div>\n</section>\n<main class=\"container mx-auto max-w-4xl\"><h2>When to use</h2>\n<p>JSONPlaceholder is a free online REST API that you can use <strong>whenever you need some fake data</strong>. It can be in a README on GitHub, for a demo on CodeSandbox, in code examples on Stack Overflow, ...or simply to test things locally.</p>\n<h2>Resources</h2>\n<p>JSONPlaceholder comes with a set of 6 common resources:</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"/posts\">/posts</a></td>\n<td>100 posts</td>\n</tr>\n<tr>\n<td><a href=\"/comments\">/comments</a></td>\n<td>500 comments</td>\n</tr>\n<tr>\n<td><a href=\"/albums\">/albums</a></td>\n<td>100 albums</td>\n</tr>\n<tr>\n<td><a href=\"/photos\">/photos</a></td>\n<td>5000 photos</td>\n</tr>\n<tr>\n<td><a href=\"/todos\">/todos</a></td>\n<td>200 todos</td>\n</tr>\n<tr>\n<td><a href=\"/users\">/users</a></td>\n<td>10 users</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Note</strong>: resources have relations. For example: posts have many comments, albums have many photos, ... see <a href=\"/guide\">guide</a> for the full list.</p>\n<h2>Routes</h2>\n<p>All HTTP methods are supported. You can use http or https for your requests.</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET</td>\n<td><a href=\"/posts\">/posts</a></td>\n</tr>\n<tr>\n<td>GET</td>\n<td><a href=\"/posts/1\">/posts/1</a></td>\n</tr>\n<tr>\n<td>GET</td>\n<td><a href=\"/posts/1/comments\">/posts/1/comments</a></td>\n</tr>\n<tr>\n<td>GET</td>\n<td><a href=\"/comments?postId=1\">/comments?postId=1</a></td>\n</tr>\n<tr>\n<td>POST</td>\n<td>/posts</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td>PATCH</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>/posts/1</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Note</strong>: see <a href=\"/guide\">guide</a> for usage examples.</p>\n<h2>Use your own data</h2>\n<p>With our sponsor <a href=\"https://mockend.com\">Mockend</a> and a simple GitHub repo, you can have your own fake online REST server in seconds.</p>\n</main>\n\n<script>\n  // Use http or https based on location.protocol\n  var example = document.getElementById('example')\n  example.textContent = example.textContent.replace('http:', location.protocol)\n\n  // Highlight result element\n  var result = document.getElementById('result')\n\n  // Run example\n  var runButton = document.getElementById('run-button')\n  runButton.onclick = function () {\n    var root = location.protocol + '//jsonplaceholder.typicode.com'\n    var runMessage = document.getElementById('run-message')\n\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then((response) => response.json())\n      .then((json) => {\n        var str = JSON.stringify(json, null, '  ')\n\n        // Format result\n        result.innerHTML = Prism.highlight(\n          str,\n          Prism.languages.javascript,\n          'javascript'\n        )\n\n        runMessage.className = ''\n      })\n  }\n</script>\n</div>\n\n    <!-- Footer -->\n    <footer class=\"container mx-auto max-w-4xl mt-four\">\n      <div class=\"mb-one\">\n        <a href=\"https://github.com/users/typicode/sponsorship\">\n          <strong>You can sponsor this project (and others) on GitHub</strong>\n        </a>\n      </div>\n      <div class=\"mb-one\">\n        Coded and maintained with ❤️ by\n        <a href=\"https://github.com/typicode\">typicode</a> © 2024\n      </div>\n    </footer>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\"></script>\n  </body>\n</html>\n]","statusTrace":"java.lang.AssertionError: expected [{status=success, data={id=1, name=John Doe}}] but found [\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <link rel=\"stylesheet\" href=\"/style.css\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/prism-themes/1.9.0/prism-lucario.min.css\"\n    />\n    <title>JSONPlaceholder - Free Fake REST API</title>\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <script\n      async\n      src=\"https://www.googletagmanager.com/gtag/js?id=G-E3C3GCQVBN\"\n    ></script>\n    <script>\n      window.dataLayer = window.dataLayer || []\n      function gtag() {\n        dataLayer.push(arguments)\n      }\n      gtag('js', new Date())\n\n      gtag('config', 'G-E3C3GCQVBN')\n    </script>\n    <script\n      async\n      src=\"https://media.ethicalads.io/media/client/ethicalads.min.js\"\n    ></script>\n  </head>\n\n  <body>\n    <!-- Banner -->\n    <div class=\"bg-blue-500 text-center py-2\">\n      <div class=\"container mx-auto\">\n        <a href=\"https://github.com/typicode/mistcss\" class=\"text-white\">Check my new project <strong>\uD83D\uDCA7 MistCSS</strong> write React components with 50% less code</a>\n      </div>\n    </div>\n    <header\n      class=\"\n        container\n        mx-auto\n        max-w-4xl\n        flex flex-col\n        md:flex-row\n        justify-between\n        py-one\n        mb-three\n      \"\n    >\n      <h1>\n        <a href=\"/\" class=\"font-bold no-underline\">JSONPlaceholder</a>\n      </h1>\n      <nav>\n        <ul class=\"flex\">\n          <li><a href=\"/guide\" class=\"mr-4 no-underline\">Guide</a></li>\n          <li>\n            <a\n              href=\"https://github.com/sponsors/typicode\"\n              class=\"mr-4 no-underline\"\n              >Sponsor this project</a\n            >\n          </li>\n          <li>\n            <a href=\"https://blog.typicode.com\" class=\"mr-4 no-underline\"\n              >Blog</a\n            >\n          </li>\n          <li>\n            <a href=\"https://my-json-server.typicode.com\" class=\"no-underline\"\n              >My JSON Server</a\n            >\n          </li>\n        </ul>\n      </nav>\n    </header>\n\n    <div>\n<!-- Hero -->\n<section id=\"hero\" class=\"-mt-three py-20 mb-six -mx-2\">\n  <div class=\"container mx-auto max-w-4xl\">\n    <span class=\"text-6xl bold\">{JSON} Placeholder</span>\n    <h1 class=\"mt-two text-lg\">\n      Free fake and reliable API for testing and prototyping.\n    </h1>\n    <p class=\"mb-one text-lg\">\n      Powered by\n      <a href=\"https://github.com/typicode/json-server\">JSON Server</a>\n      +\n      <a href=\"https://github.com/typicode/lowdb\">LowDB</a>.\n    </p>\n    <p><b>Serving ~3 billion requests each month</b>.</p>\n  </div>\n</section>\n\n<!-- Sponsors -->\n<section class=\"container mx-auto max-w-4xl mb-six\">\n  <h2 class=\"text-2xl mb-one\">Sponsors</h2>\n  <p class=\"mb-two\">\n    JSONPlaceholder is supported by the following companies and\n    <a href=\"https://github.com/sponsors/typicode\">Sponsors</a> on GitHub, check\n    them out \uD83D\uDC96\n  </p>\n\n  <p>\n    <a href=\"https://mockend.com\" target=\"_blank\">\n      <img src=\"mockend.svg\" class=\"mb-two\" style=\"height: 100px\"  />\n    </a>\n  </p>\n\n  <p>\n    <a href=\"https://zuplo.link/json-server-web\" target=\"_blank\">\n      <img src=\"https://github.com/user-attachments/assets/adfee31f-a8b6-4684-9a9b-af4f03ac5b75\" class=\"mb-two\" style=\"height: 100px\" />\n    </a>\n  </p>\n\n  <p class=\"my-two\">\n    <a href=\"https://github.com/sponsors/typicode\">Your company logo here</a>\n  </p>\n</section>\n\n<!-- Example -->\n<section class=\"container mx-auto max-w-4xl mb-four\">\n  <h2 class=\"text-2xl mb-one\">Try it</h2>\n  <p>Run this code here, in a console or from any site:</p>\n\n  <pre><code id=\"example\" class=\"language-javascript\">fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(response => response.json())\n      .then(json => console.log(json))</code></pre>\n\n  <button\n    id=\"run-button\"\n    class=\"\n      bg-black\n      hover:bg-gray-700\n      text-white\n      font-bold\n      py-quarter\n      my-quarter\n      px-4\n      rounded\n    \"\n  >\n    Run script\n  </button>\n\n  <pre><code id=\"result\" class=\"language-javascript\">{}</code></pre>\n  <p id=\"run-message\" class=\"invisible\">\n    Congrats! You've made your first call to JSONPlaceholder. \uD83D\uDE03 \uD83C\uDF89\n  </p>\n  <div\n    class=\"horizontal flat adaptive\"\n    data-ea-publisher=\"jsonplaceholdertypicodecom\"\n    data-ea-style=\"stickybox\"\n    data-ea-keywords=\"javascript|typescript|mobile|react|vue|frontend|front-end|backend|back-end\"\n  ></div>\n</section>\n<main class=\"container mx-auto max-w-4xl\"><h2>When to use</h2>\n<p>JSONPlaceholder is a free online REST API that you can use <strong>whenever you need some fake data</strong>. It can be in a README on GitHub, for a demo on CodeSandbox, in code examples on Stack Overflow, ...or simply to test things locally.</p>\n<h2>Resources</h2>\n<p>JSONPlaceholder comes with a set of 6 common resources:</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"/posts\">/posts</a></td>\n<td>100 posts</td>\n</tr>\n<tr>\n<td><a href=\"/comments\">/comments</a></td>\n<td>500 comments</td>\n</tr>\n<tr>\n<td><a href=\"/albums\">/albums</a></td>\n<td>100 albums</td>\n</tr>\n<tr>\n<td><a href=\"/photos\">/photos</a></td>\n<td>5000 photos</td>\n</tr>\n<tr>\n<td><a href=\"/todos\">/todos</a></td>\n<td>200 todos</td>\n</tr>\n<tr>\n<td><a href=\"/users\">/users</a></td>\n<td>10 users</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Note</strong>: resources have relations. For example: posts have many comments, albums have many photos, ... see <a href=\"/guide\">guide</a> for the full list.</p>\n<h2>Routes</h2>\n<p>All HTTP methods are supported. You can use http or https for your requests.</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET</td>\n<td><a href=\"/posts\">/posts</a></td>\n</tr>\n<tr>\n<td>GET</td>\n<td><a href=\"/posts/1\">/posts/1</a></td>\n</tr>\n<tr>\n<td>GET</td>\n<td><a href=\"/posts/1/comments\">/posts/1/comments</a></td>\n</tr>\n<tr>\n<td>GET</td>\n<td><a href=\"/comments?postId=1\">/comments?postId=1</a></td>\n</tr>\n<tr>\n<td>POST</td>\n<td>/posts</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td>PATCH</td>\n<td>/posts/1</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>/posts/1</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Note</strong>: see <a href=\"/guide\">guide</a> for usage examples.</p>\n<h2>Use your own data</h2>\n<p>With our sponsor <a href=\"https://mockend.com\">Mockend</a> and a simple GitHub repo, you can have your own fake online REST server in seconds.</p>\n</main>\n\n<script>\n  // Use http or https based on location.protocol\n  var example = document.getElementById('example')\n  example.textContent = example.textContent.replace('http:', location.protocol)\n\n  // Highlight result element\n  var result = document.getElementById('result')\n\n  // Run example\n  var runButton = document.getElementById('run-button')\n  runButton.onclick = function () {\n    var root = location.protocol + '//jsonplaceholder.typicode.com'\n    var runMessage = document.getElementById('run-message')\n\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then((response) => response.json())\n      .then((json) => {\n        var str = JSON.stringify(json, null, '  ')\n\n        // Format result\n        result.innerHTML = Prism.highlight(\n          str,\n          Prism.languages.javascript,\n          'javascript'\n        )\n\n        runMessage.className = ''\n      })\n  }\n</script>\n</div>\n\n    <!-- Footer -->\n    <footer class=\"container mx-auto max-w-4xl mt-four\">\n      <div class=\"mb-one\">\n        <a href=\"https://github.com/users/typicode/sponsorship\">\n          <strong>You can sponsor this project (and others) on GitHub</strong>\n        </a>\n      </div>\n      <div class=\"mb-one\">\n        Coded and maintained with ❤️ by\n        <a href=\"https://github.com/typicode\">typicode</a> © 2024\n      </div>\n    </footer>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\"></script>\n  </body>\n</html>\n]\r\n\tat org.testng.Assert.fail(Assert.java:110)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1413)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:149)\r\n\tat org.testng.Assert.assertEquals(Assert.java:131)\r\n\tat org.testng.Assert.assertEquals(Assert.java:655)\r\n\tat org.testng.Assert.assertEquals(Assert.java:665)\r\n\tat com.api.tests.ApiTest.testGetUser(ApiTest.java:53)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:565)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1604)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:806)\r\n\tat org.testng.TestRunner.run(TestRunner.java:601)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:433)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:330)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1176)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1099)\r\n\tat org.testng.TestNG.run(TestNG.java:1067)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\r\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1749782452890,"stop":1749782453209,"duration":319},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"afterStages":[],"labels":[{"name":"package","value":"com.api.tests.ApiTest"},{"name":"testClass","value":"com.api.tests.ApiTest"},{"name":"testMethod","value":"testGetUser"},{"name":"parentSuite","value":"Default Suite"},{"name":"suite","value":"RestAssuredJsonYML"},{"name":"subSuite","value":"com.api.tests.ApiTest"},{"name":"host","value":"Joe"},{"name":"thread","value":"19108@Joe.main(3)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"21af0766979e835.json","parameterValues":[]}